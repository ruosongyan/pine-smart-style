{"code":"import * as objectPath from 'object-path';\nfunction findDomNodes(ast) {\n    return ast.body[0].expression.children;\n}\nconst NODE_TYPE = {\n    JSXElement: 'JSXElement',\n    Literal: 'Literal',\n    JSXExpressionContainer: 'JSXExpressionContainer',\n    MemberExpression: 'MemberExpression',\n    CallExpression: 'CallExpression'\n};\nfunction traverse(obj, condition, getter = (value) => value) {\n    const result = [];\n    _traverse(obj, condition, getter);\n    function _traverse(obj, condition, getter = (value) => value) {\n        const type = Object.prototype.toString.call(obj);\n        if (type === '[object Object]' || type === '[object Array]') {\n            const keys = Object.keys(obj);\n            for (let k of keys) {\n                var val = obj[k];\n                if (condition(val)) {\n                    const getterVal = getter(val);\n                    getterVal && result.push(getterVal);\n                    continue;\n                }\n                _traverse(val, condition, getter);\n            }\n        }\n    }\n    return result;\n}\nclass Styler {\n    constructor() { }\n    _isTargetNode(node) {\n        return node.type === NODE_TYPE.JSXElement;\n    }\n    _transformAttr(node) {\n        const JSXIdentifierNode = node.name;\n        if (JSXIdentifierNode?.type === 'JSXIdentifier' && JSXIdentifierNode.name === 'className') {\n            const classValueNode = node.value;\n            if (classValueNode.type === NODE_TYPE.Literal) {\n                return '.' + classValueNode.value;\n            }\n            if (classValueNode.type === NODE_TYPE.JSXExpressionContainer) {\n                const expressionNode = classValueNode.expression;\n                if (expressionNode.type === NODE_TYPE.MemberExpression && objectPath.get(expressionNode, 'object.name') === 'styles') {\n                    return '.' + objectPath.get(expressionNode, 'property.name');\n                }\n                if (expressionNode.type === NODE_TYPE.CallExpression && ['cx', 'classNames', 'classnames', 'cls', 'cn', 'cns', 'CN', 'CNS'].includes(objectPath.get(expressionNode, 'callee.name'))) {\n                    const classNames = traverse(expressionNode, (node) => {\n                        return node.type === NODE_TYPE.MemberExpression && objectPath.get(node, 'object.name') === 'styles';\n                    }, (val) => objectPath.get(val, 'property.name'));\n                    return classNames.map(s => `.${s}`).join(' ');\n                }\n            }\n        }\n    }\n    generateStyle(ast) {\n        const cssTree = [];\n        const domAst = findDomNodes(ast);\n        const context = this;\n        // 1. 生成class的结构\n        for (let i = 0; i < domAst.length; ++i) {\n            const treeObj = walk(domAst[i]);\n            treeObj && cssTree.push(treeObj);\n        }\n        function walk(node) {\n            if (!context._isTargetNode(node)) {\n                return;\n            }\n            let nodeObj = {\n                className: '',\n                children: []\n            };\n            const { openingElement, children } = node;\n            const { attributes } = openingElement;\n            if (attributes) {\n                let result = '';\n                for (let jsxAttr of attributes) {\n                    result += context._transformAttr(jsxAttr) || '';\n                    result += ' ';\n                }\n                nodeObj.className = result;\n            }\n            for (let c of children) {\n                const childObj = walk(c);\n                childObj && nodeObj.children.push(childObj);\n            }\n            return nodeObj;\n        }\n        // 2. 生成class字符串\n        let cssStr = '';\n        for (let i = 0; i < cssTree.length; ++i) {\n            const node = cssTree[i];\n            cssStr += node2css(node) || '';\n        }\n        function node2css(node) {\n            const { className, children } = node;\n            if (!className.trim()) {\n                return children.map((n) => node2css(n)).filter((u) => Boolean(u)).join(`\n      `);\n            }\n            ;\n            return `${className} {\n        ${children.map((n) => node2css(n)).filter((u) => Boolean(u)).join(`\n        `)}\n      }`;\n        }\n        return cssStr;\n    }\n}\nexport default Styler;\n//# sourceMappingURL=styler.js.map","references":["/Users/bytedance/Code/pine-smart-style/node_modules/acorn/dist/acorn.d.ts","/Users/bytedance/Code/pine-smart-style/node_modules/acorn-walk/dist/walk.d.ts","/Users/bytedance/Code/pine-smart-style/node_modules/@types/object-path/index.d.ts"],"map":"{\"version\":3,\"file\":\"styler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/core/styler.ts\"],\"names\":[],\"mappings\":\"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\"}"}
